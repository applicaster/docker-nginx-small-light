env UPSTREAM_BASE_URL;

#user  nobody;
worker_processes  auto;

error_log /dev/stdout error;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    perl_set $upstream_base_url 'sub { return $ENV{"UPSTREAM_BASE_URL"}; }';
    perl_set $upstream_host '
        sub {
            $ENV{"UPSTREAM_BASE_URL"} =~ /^https?:\/\/([^\/]*)/;
            return $1;
        }
    ';

    include       mime.types;
    default_type  application/octet-stream;

    access_log /dev/stdout;

    sendfile    on;
    tcp_nopush  on;
    tcp_nodelay on;
    keepalive_timeout 65;

    proxy_cache_path /var/nginx/cache levels=1:2 keys_zone=cache-space:4m max_size=50m inactive=120m;
    proxy_temp_path /var/nginx/tmp;


    server {
      resolver 8.8.8.8;

      listen 80;
      # log_subrequest on;
      # rewrite_log on;

      root /etc/nginx/html;

      set $jpeg_quality 95;
      set $image_backend $upstream_base_url;

      small_light on;
      small_light_buffer 10M;

      location /health {
        return 200 "OK";
      }

      location / {
          gzip_static on;
          expires     max;
          add_header  Cache-Control public;
          add_header  Last-Modified "";
          add_header  ETag "";

          set $resize_parameters 1; 

          if ($arg_command = "") {
            set $resize_parameters 0;
          }

          if ($arg_width = "") { 
            set $resize_parameters 0; 
          }

          if ($arg_height = "" ) { 
            set $resize_parameters 0; 
          }

          if ($resize_parameters = 1) { 
            proxy_pass http://127.0.0.1:80/small_light(dw=$arg_width,dh=$arg_height,da=h,q=$jpeg_quality,e=imagemagick,jpeghint=y)$uri;
          }

          proxy_pass $upstream_base_url$uri;
      }

      location ~ small_light[^/]*/(.+)$ {
          set $file $1;
          proxy_pass http://127.0.0.1:80/upstream/$file;
          allow 127.0.0.0/8;
          deny all;
      }

      location ~ ^/upstream/(.*)$ {
          set $upstream_path $1;
          proxy_set_header    Host    $upstream_host;
          proxy_pass                  $upstream_base_url/$upstream_path;
      }
    }
 }
